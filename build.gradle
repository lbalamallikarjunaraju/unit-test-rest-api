/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Dell' at '6/15/18 12:26 AM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile (
    [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.7.+'],
    [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.+'],
    [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.+'],
    [group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.7.+']
  )
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.+'
  	testCompile group: 'org.testng', name: 'testng', version: '6.+'
	testCompile group: 'org.glassfish.jersey.bundles.repackaged', name: 'jersey-guava', version: '2.25.1'
  	testCompile (
      [group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: '2.26-b03'],
      [group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.26-b03']
  	)
  


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
